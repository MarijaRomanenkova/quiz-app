import { Prisma } from '@prisma/client';

/**
 * Custom Prisma types for advanced type safety and utility
 *
 * This file defines custom TypeScript types and interfaces that extend or supplement
 * the types generated by Prisma. Use these types for advanced queries, DTOs, or
 * utility functions that require more specific typing than the default Prisma types.
 *
 * @file prisma.types.ts
 *
 * @example
 * ```typescript
 * import { SomeCustomType } from '../types/prisma.types';
 * ```
 */

export type UserCreateInput = {
  email: string;
  password: string;
  username: string;
  levelId: string;
  studyPaceId?: number;
  agreedToTerms?: boolean;
  marketingEmails?: boolean;
  shareDevices?: boolean;
  pushNotifications?: boolean;
  emailVerified?: boolean;
  verificationToken?: string;
  verificationTokenExpires?: Date;
  resetToken?: string;
  resetTokenExpiry?: Date;
};

export type UserUpdateInput = {
  email?: string;
  password?: string;
  username?: string;
  levelId?: string;
  studyPaceId?: number;
  agreedToTerms?: boolean;
  marketingEmails?: boolean;
  shareDevices?: boolean;
  pushNotifications?: boolean;
  emailVerified?: boolean;
  verificationToken?: string | null;
  verificationTokenExpires?: Date | null;
  resetToken?: string | null;
  resetTokenExpiry?: Date | null;
};

export type UserWhereUniqueInput = {
  id?: string;
  email?: string;
  username?: string;
  verificationToken?: string;
  resetToken?: string;
};

export type UserWhereInput = {
  id?: string;
  email?: string;
  username?: string;
  levelId?: string;
  emailVerified?: boolean;
};

export type UserSelect = {
  id?: boolean;
  email?: boolean;
  username?: boolean;
  levelId?: boolean;
  emailVerified?: boolean;
  createdAt?: boolean;
  updatedAt?: boolean;
};

// Add more type definitions as needed
